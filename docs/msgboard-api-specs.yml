openapi: "3.1.0"
info:
  title: Message Board API
  version: "1.0.0"
servers:
  - url: http://172.30.71.9:3004/v1
    description: Message Board API Dev Server
security: []
components:
  schemas:
    baseUser:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 15
          pattern: "^[A-Za-z0-9_]+$"
          description: Name of user
          example: Fred
    userWithPassword:
      allOf:
        - $ref: "#/components/schemas/baseUser"
        - description: A user with a password
          required:
            - password
          properties:
            password:
              type: string
              minLength: 2
              maxLength: 15
              description: Password of user
              example: "password1!"
    userWithID:
      allOf:
        - $ref: "#/components/schemas/baseUser"
        - description: A user with a ID
          required:
            - id
          properties:
            id:
              type: string
              description: User's unique identifier
              example: "65d3f8a51424b44860138f4d"
    authenticationInfo:
      type: object
      description: Authentication Information
      required:
        - id
        - token
        - role
      properties:
        id:
          type: string
          description: User's unique identifier
          example: "65d3f8a51424b44860138f4d"
        token:
          type: string
          description: jvt token containing users role
          example: 
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWQzZjhhN
            TE0MjRiNDQ4NjAxMzhmNGQiLCJyb2xlIjoidXNlciIsImlhdCI6MTcwODM5NDAwNi
            wiZXhwIjoxNzA4Mzk3NjA2fQ.KkFB2EsJQUD5oBukSVLbuGUxVPWVbaakKUhbxVA47ok
        role:
          type: string
          description: The role of the user
          example: "user"
    message:
      type: object
      description: A message
      required:
        - name 
        - msgText
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 15
          pattern: "^[A-Za-z0-9_]+$"
          description: |
            Name of User who created
            the message
          example: Fred
        msgText:
          type: string
          description: |
            A message's text.
          minLength: 2
          maxLength: 30
          example: Hello World!
    messageWithId:
      allOf:
        - $ref: '#/components/schemas/message'
        - type: object
          description: A message with id
          required:
            - id
          properties:
            id:
              type: number
              description: message's id
              example: 1
paths:
  /users:
    description: All the users
    post:
      summary: Register new user
      operationId: addNewUser
      description: |
        Registers a new user to the App. 
        Once registered, the user will be able 
        to login with their credentials.
      requestBody:
        description: User's credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userWithPassword"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userWithID"
        "409":
          description: Username already exists.
        "400":
          description: Bad Request.

  /login:
    description: Logging in
    post:
      summary: Log in 
      operationId: login
      description: |
        Logs user into the Application by giving them
        an access token. The token will represent 
        being logged in. The credentials must match with 
        a registered user.
      requestBody:
        description: User's credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userWithPassword"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authenticationInfo"
        "409":
          description: Username already exists.
        "400":
          description: Bad Request.


  /messages:
    description: All the messages
    get:
      summary: List all messages
      operationId: getAllMessages
      description: |
        List all the messages in the order
        they were posted (newest at top).
      responses:
        "200":
          description: All the messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/messageWithId"
        "400":
          description: |
            Bad Request. 
    post:
      summary: Add a new message 
      operationId: addNewMessage
      description: Add a new message to the list
      requestBody:
        description: Message's data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/message"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/message"
        "400":
          description: |
            Bad Request. The message in the body of the Request 
            is either missing or malformed.
  # /users:
  #   description: All the users
  #     get:
  #       summary: List all users
  #       operationId: getAllUsers



